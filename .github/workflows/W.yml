# This is a basic workflow to help you get started with Actions
name: W
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # UTC (国内 UTC+8)
    - cron: '03 23 * * *'
  watch:
    types: [started]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: (github.event.repository.owner.id == github.event.sender.id) || ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }} 
    # 超时设置
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Delete workflow runs
        uses: MajorScruffy/delete-old-workflow-runs@v0.3.0
        with:
          repository: ${{ github.repository }}   # replace this with your own repository such as >> owner/repo
          older-than-seconds: 604800          # remove all workflow runs older than 1 day >> 24*60*60=86400
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Setup WARP  # Just for reCAPTCHA Google block debug
#         run: |
#           git clone -b main https://github.com/P3TERX/warp.sh ~/warp
#           cd ~/warp
#           sudo bash ./warp.sh wg4
          
      - name: Setup FFmpeg using versions
        uses: Iamshankhadeep/setup-ffmpeg@v1.2
        with:
          # Not strictly necessary, but it may prevent rate limit
          # errors especially on GitHub-hosted macos machines.
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup Environment
        run: |
          pip install --upgrade pip
          pip install Pillow pyscreenshot
          pip install -r ./requirements.txt
          
      - name: 'Renew'
        env:
          URL_BASE: ${{ secrets.URL_BASE_W }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          BARK_TOKEN: ${{ secrets.BARK_TOKEN }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_USER_ID: ${{ secrets.TG_USER_ID }}
        run: |  
          xvfb-run python3 ./main.py
